[profile.default]
src = "src"
out = "out"
libs = ["lib"]
gas_reports = ["*"]
cbor_metadata = true
optimizer = true
optimizer_runs = 200
etherscan_api_version = "v2"

[dependencies]
openzeppelin-contracts = { git = "https://github.com/OpenZeppelin/openzeppelin-contracts.git", tag = "v5.0.2" }
openzeppelin-contracts-upgradeable = { git = "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable.git", tag = "v5.0.2" }
forge-std = { git = "https://github.com/foundry-rs/forge-std.git", tag = "v1.9.7" }
aave-v3-core = { git = "https://github.com/aave/aave-v3-core.git", tag = "v1.19.4" }
solmate = { git = "https://github.com/transmissions11/solmate.git", tag = "v6" }

# See more config options https://github.com/foundry-rs/foundry/blob/master/crates/config/README.md#all-options
[invariant]
runs = 1000           # Number of times to run the invariant test campaign
depth = 100           # Number of calls per invariant test campaign
fail_on_revert = true # Whether or not to fail the test if a call reverts

[rpc_endpoints]
base = "${BASE_RPC_URL}"
sonic = "${SONIC_RPC_URL}"
polygon = "${POLYGON_RPC_URL}"
avax = "${AVAX_RPC_URL}"
arbitrum = "${ARBITRUM_RPC_URL}"
bsc = "${BSC_RPC_URL}"
optimism = "${OPTIMISM_RPC_URL}"
ethereum = "${ETHEREUM_RPC_URL}"

[etherscan]
optimism = { key = "${ETHERSCAN_API_KEY}" }
arbitrum = { key = "${ETHERSCAN_API_KEY}" }
ethereum = { key = "${ETHERSCAN_API_KEY}" }
sonic = { key = "${ETHERSCAN_API_KEY}" }
bsc = { key = "${ETHERSCAN_API_KEY}" }
base = { key = "${ETHERSCAN_API_KEY}" }
polygon = { key = "${ETHERSCAN_API_KEY}" }
avax = { key = "${ETHERSCAN_API_KEY}" }
